---
title: Creating databases for Tanzu Platform for Cloud Foundry
owner: Releng
---

Here is an example procedure for creating the necessary databases
on your external database instance so that you can deploy <%= vars.app_runtime_first %> with an external database.

Use a password to protect the database you use in your deployment.

Exact configurations depend on your database provider. The following example procedure is for AWS RDS:

1. Add the `ubuntu` account key pair from your IaaS deployment to your local SSH profile
   so that you can access the <%= vars.ops_manager_full %> VM.
   For example, in AWS, you add a key pair created in AWS:

    <pre class="terminal">$ ssh-add aws-keypair.pem</pre>

2. SSH in to your <%= vars.ops_manager %> using the <%= vars.ops_manager %> FQDN and the username `ubuntu`:

    <pre class="terminal">$ ssh ubuntu@OPS-MANAGER-FQDN</pre>

3. Log in to your MySQL database instance using the appropriate hostname and user login values configured in your IaaS account. For example, to log in to your AWS RDS instance, run the following MySQL command:

     <pre class="terminal">$ mysql --host=RDSHOSTNAME --user=RDSUSERNAME --password=RDSPASSWORD</pre>

4. Run the following MySQL commands to create databases for the eleven
   <%= vars.app_runtime_abbr %> components that require a relational database:
  <pre class="terminal">CREATE database ccdb;
  CREATE database notifications;
  CREATE database autoscale;
  CREATE database app\_usage\_service;
  CREATE database routing;
  CREATE database diego;
  CREATE database account;
  CREATE database nfsvolume;
  CREATE database networkpolicyserver;
  CREATE database silk;
  CREATE database locket;
  CREATE database uaa;
  CREATE database credhub;
  </pre>

1. Type `exit` to end the session with the MySQL client, and `exit` again to close your connection
   to the <%= vars.ops_manager %> VM.
