---
title: Troubleshooting co-located Small Footprint jobs using logs
owner: RelEng
---

To troubleshoot a job that runs on the Control or Database VMs:

1. Follow the procedures in _Advanced Troubleshooting with the BOSH CLI_ to  the log in to the BOSH Director for your deployment:
	1. [Gather Credential and IP Address Information](https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/3.0/vmware-tanzu-ops-manager/install-trouble-advanced.html#gather)
	2. [Log into <%= vars.ops_manager %> with SSH](https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/3.0/vmware-tanzu-ops-manager/install-trouble-advanced.html#ssh)
	3. [Authenticate with the BOSH Director](https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/3.0/vmware-tanzu-ops-manager/install-trouble-advanced.html#log-in)

2. Use BOSH to list the VMs in your Small Footprint <%= vars.app_runtime_abbr %> deployment. Run:

		bosh -e BOSH-ENV -d TANZU-CF-DEPLOYMENT vms

	Where:
	* `BOSH-ENV` is the name of your BOSH environment.
	* `TANZU-CF-DEPLOYMENT` is the name of your Small Footprint <%= vars.app_runtime_abbr %> deployment.

	<p> If you do not know the name of your deployment, you can run
		<code>bosh -e BOSH-ENV deployments</code> to list the deployments for your BOSH Director.</p>

3. Use BOSH to SSH into one of the Small Footprint <%= vars.app_runtime_abbr %> VMs. Run:

		bosh -e BOSH-ENV -d TANZU-CF-DEPLOYMENT ssh VM-NAME/VM-GUID

	Where:
	* `BOSH-ENV` is the name of your BOSH environment.
	* `TANZU-CF-DEPLOYMENT` is the name of your Small Footprint <%= vars.app_runtime_abbr %> deployment.
	* `VM-NAME` is the name of your VM.
	* `VM-GUID` is the GUID of your VM.

	For example, to SSH into the Control VM, run:

		bosh -e example-env -d example-deployment ssh control/12b1b027-7ffd-43ca-9dc9-7f4ff204d86a

4. To act as a super user, run:

		sudo su

5. To list the processes running on the VM, run:

		monit summary

	The following example output lists the processes running on the Control VM. The processes listed reflect the co-location of jobs as outlined in [Architecture](#arch).
	<pre class="terminal">
	control/12b1b027-7ffd-43ca-9dc9-7f4ff204d86a:/var/vcap/bosh\_ssh/bosh\_f9d2446b18b445e# monit summary
	The Monit daemon 5.2.5 uptime: 5d 21h 10m

	Process 'bbs'                       running
	Process 'metron\_agent'              running
	Process 'locket'                    running
	Process 'route\_registrar'           running
	Process 'policy-server'             running
	Process 'silk-controller'           running
	Process 'uaa'                       running
	Process 'statsd\_injector'           running
	Process 'cloud\_controller\_ng'       running
	Process 'cloud\_controller\_worker\_local\_1' running
	Process 'cloud\_controller\_worker\_local\_2' running
	Process 'nginx\_cc'                  running
	Process 'routing-api'               running
	Process 'cloud\_controller\_clock'    running
	Process 'cloud\_controller\_worker\_1' running
	Process 'auctioneer'                running
	Process 'cc\_uploader'               running
	Process 'file\_server'               running
	Process 'nsync\_listener'            running
	Process 'ssh\_proxy'                 running
	Process 'tps\_watcher'               running
	Process 'stager'                    running
	Process 'loggregator\_trafficcontroller' running
	Process 'reverse\_log\_proxy'         running
	Process 'adapter'                   running
	Process 'doppler'                   running
	Process 'syslog\_drain\_binder'       running
	System 'system\_localhost'           running
	</pre>

6. To access logs, go to `/vars/vcap/sys/log` by running:

		cd /var/vcap/sys/log

7. To list the log directories for each process, run:

		ls

8. Go to the directory of the process that you want to view logs for. For example, for the Cloud Controller process, run:

		cd cloud_controller_ng/

	From the directory of the process, you can list and view its logs. See the following example output:
	<pre class="terminal">
	control/12b1b027-7ffd-43ca-9dc9-7f4ff204d86a:/var/vcap/sys/log/cloud\_controller\_ng# ls
	cloud\_controller\_ng\_ctl.err.log  cloud\_controller\_ng.log.2.gz  cloud\_controller\_ng.log.6.gz         drain                  pre-start.stdout.log
	cloud\_controller\_ng\_ctl.log      cloud\_controller\_ng.log.3.gz  cloud\_controller\_ng.log.7.gz         post-start.stderr.log
	cloud\_controller\_ng.log          cloud\_controller\_ng.log.4.gz  cloud\_controller\_worker\_ctl.err.log  post-start.stdout.log
	cloud\_controller\_ng.log.1.gz     cloud\_controller\_ng.log.5.gz  cloud\_controller\_worker\_ctl.log      pre-start.stderr.log
	</pre>
