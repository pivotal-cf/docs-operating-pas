---
breadcrumb: TAS for VMs Documentation
title: Configuring Authentication and Enterprise SSO for TAS for VMs
owner: Identity
---

This topic describes <%= vars.app_runtime_first %> authentication and single sign-on configuration with Lightweight Directory Access Protocol (LDAP) and Security Assertion Markup Language (SAML).

## <a id='overview'></a> Overview

Connecting <%= vars.app_runtime_abbr %> to SAML, LDAP, or OIDC external user store allows the User Account and Authentication (UAA) server to delegate authentication to existing enterprise user stores.

If your enterprise user store is exposed as a SAML, LDAP, or OIDC identity provider (IDP) for single sign-on (SSO), you can configure SSO to allow users to access Apps Manager and the Cloud Foundry Command Line Interface (cf CLI) without creating a new account or, if you use SAML or OIDC, without re-enter credentials.

For information about managing user identity and pre-provisioning user roles with SAML or LDAP, see [Adding Existing SAML or LDAP Users to an <%= vars.platform_name %> Deployment](external-user-management.html).

For an explanation of the process used by the UAA server when it attempts to authenticate a user through LDAP, see [Configuring LDAP Integration with <%= vars.platform_name %>](https://community.pivotal.io/s/article/Configuring-LDAP-Integration-with-Pivotal-Cloud-Foundry) in the Knowledge Base.

<p class='note'><strong>Note:</strong> When you integrate with an external IDP, such as LDAP, authentication within the UAA becomes chained. An authentication attempt with user credentials is first attempted against the UAA user store before the external provider, LDAP. For more information, see <a href="https://github.com/cloudfoundry/uaa/blob/master/docs/UAA-LDAP.md#chained-authentication">Chained Authentication</a> in the <em>User Account and Authentication LDAP Integration</em> documentation on GitHub.</p>

Use one of the following procedures to configure your deployment with SAML, LDAP, or OIDC.

## <a id="configure-saml"></a> Configure <%= vars.app_runtime_abbr %> to Use a SAML Identity Provider

In SAML terminology, the SAML protocol communicates user data between an IDP and a service provider (SP).

To connect <%= vars.app_runtime_abbr %> with SAML, follow both of these procedures:

* [Configure <%= vars.app_runtime_abbr %> as a Service Provider for SAML](#configure-pcf-for-saml)

* [Configure SAML as an Identity Provider for <%= vars.app_runtime_abbr %>](#configure-saml-for-pcf)

### <a id="configure-pcf-for-saml"></a> Configure <%= vars.app_runtime_abbr %> as a Service Provider for SAML

To configure <%= vars.app_runtime_abbr %> to use a SAML IDP:

1. Navigate to the <%= vars.ops_manager_full %> Installation Dashboard.

1. Click the <%= vars.app_runtime_abbr %> tile.

1. Select **Domains**.

1. Record your system domain.
    ![alt-text="In Domains, enter the System domain and Apps domain. Click Save.](./images/domains.png)

1. Select **Authentication and Enterprise SSO**.

1. Select **SAML Identity Provider**.

    ![alt-text="In the SAML Identity Provider section, fill in the required fields."](./images/sso-ert.png)
**Note**: You must manually deactivate a SAML IDP that was created by <%= vars.app_runtime_abbr %> when you no longer require it.

1. Set the **Provider name**. This is a unique name you create for the IDP. This name can include only alphanumeric characters, `+`, `_`, and `-`. You must not change this name after deployment because all external users use this name to link to the provider.
1. Enter a **Display name**. Your provider display name appears as a link on your <%= vars.platform_name %> login page. You can access this link at `https://login.SYSTEM-DOMAIN`, where `SYSTEM-DOMAIN` is the system domain you recorded from the **Domains** pane.
<br>
<br>
    ![alt-text="In the login dialog, enter the user name and password and click Sign In."](./images/login-page.png)

1. Retrieve the metadata from your IDP and copy it into the **Provider metadata** or the **Provider metadata URL** fields, depending on whether your IDP exposes a metadata URL or not. For more information, see [Configure SAML as an Identity Provider for <%= vars.app_runtime_abbr %>](#configure-saml-for-pcf). <%= vars.company_name %> recommends that you use the provider metadata URL rather than provider metadata because the metadata can change. You can do this in either of the following ways:
    * If your IDP exposes a metadata URL, provide the metadata URL.
    * Download your IDP metadata and paste this XML into the **Provider metadata** field.

    <p class='note'><strong>Note:</strong> You only need to select one of the above configurations. If you configure both, your IDP defaults to the <strong>Provider metadata URL</strong>.</p>
    <p class="note"><strong>Note:</strong> For information about onboarding SAML users and mapping them to <%= vars.app_runtime_abbr %> user roles, see <a href="external-user-management.html">Adding Existing SAML or LDAP Users to an <%= vars.platform_name %> Deployment</a>.</p>

2. Select the **Name ID format** for your SAML IDP. This translates to `username` in <%= vars.app_runtime_abbr %>. The default is **Email Address**.

3. For **Email domains**, enter a comma-separated list of the email domains for external users who are to receive invitations to Apps Manager.

4. For **First name attribute** and **Last name attribute**, enter the attribute names in your SAML database that correspond to the first and last names in each user record. For example, `first_name` and `last_name`. This field is case-sensitive.

5. For **Email attribute**, enter the attribute name in your SAML assertion that corresponds to the email address in each user record. For example, `EmailID`. This field is case-sensitive.

6. For **External groups attribute**, enter the attribute name in your SAML database that defines the groups that a user belongs to. For example, `group_memberships`. To map the groups from the SAML assertion to admin roles in <%= vars.app_runtime_abbr %>, see [Grant Admin Permissions to an External Group (SAML or LDAP)](../uaa/uaa-user-management.html#external-group) in _Creating and Managing Users with the UAA CLI (UAAC)_. This field is case-sensitive.

7. By default, all SAML authentication requests from <%= vars.app_runtime_abbr %> are signed. To change this, deactivate the **Sign authentication requests** check box and configure your IDP to verify SAML authentication requests.

8. To validate the signature for the incoming SAML assertions, activate the **Required signed assertions** check box and configure your IDP to send signed SAML assertions.

9.  Click **Save** and return to the <%= vars.ops_manager %> Installation Dashboard.

10. Click **Review Pending Changes**.

11. Click **Apply Changes**.

### <a id="configure-saml-for-pcf"></a> Configure SAML as an Identity Provider for <%= vars.app_runtime_abbr %>

To configure a SAML IDP to designate <%= vars.app_runtime_abbr %> as an SP:

1. Download the SP metadata from `https://login.SYSTEM-DOMAIN/saml/metadata`, where `SYSTEM-DOMAIN` is the system domain you recorded from the **Domains** pane.

   For configuration instructions, see the documentation from your IDP.

2. See the following table for information about certain industry-standard IDPs and how to integrate them with <%= vars.app_runtime_abbr %>:
    <table border="1">
      <tr>
        <th>Solution Name</th>
        <th>Integration Guide</th>
      </tr>
      <tr>
        <td><a href='http://www.ca.com/us/securecenter/ca-single-sign-on.aspx'>CA Single Sign-On aka CA SiteMinder</a></td>
        <td><a href="ca-sso-config.html">Configuring CA as an Identity Provider</a></td>
      </tr>
      <tr>
        <td><a href='https://www.pingidentity.com/en/products/pingfederate.html'>Ping Federate</a></td>
        <td><a href="ping-federate-sso-configuration.html">Configuring PingFederate as an Identity Provider</a></td>
      </tr>
      <tr>
        <td><a href='https://technet.microsoft.com/en-us/windowsserver/dd448613.aspx'>Active Directory Federation Services (AD FS)</a></td>
        <td><a href="https://docs.pivotal.io/platform/<%= vars.current_major_version %>/opsguide/adfs-sso-configuration.html">Configuring AD FS as an Identity Provide</a></td>
      </tr>
    </table>

<p class="note"><strong>Note:</strong> Some IDPs allow uploads of SP metadata while other providers require you to manually enter the SP metadata into a form. If your IDP requires manual entry but is not listed in the previous table, see <a href="ca-sso-config.html">Configuring CA as an Identity Provider</a>.</p>

## <a id="configure-ldap"></a> Configure LDAP as an Identity Provider for <%= vars.app_runtime_abbr %>

To integrate the UAA with one or more LDAP servers:

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard.

1. Click the <%= vars.app_runtime_abbr %> tile.

1. Select **Authentication and Enterprise SSO**.

    ![alt-text="The LDAP Server is selected. Fill in the required fields."](./images/uaa/ldap-config.png)

1. In **User authentication mechanism**, select **LDAP server**.

1. For **Server URLs**, enter the URL that points to your LDAP server. For multiple LDAP servers, enter a space separated list. Each URL must include one of the following protocols:
    * `ldap://`: This specifies that the LDAP server uses an unencrypted connection.
    * `ldaps://`: This specifies that the LDAP server uses SSL for an encrypted connection and requires that the LDAP server holds a trusted certificate or that you import a trusted certificate to the JVM truststore.

1. For **LDAP credentials**, enter the LDAP distinguished name (DN) and password for binding to the LDAP server. For example, `cn=administrator,ou=Users,dc=example,dc=com`.
    <p class="note"><strong>Note:</strong> <%= vars.company_name %> recommends that you provide LDAP credentials that grant read-only permissions on the LDAP search base and the LDAP group search base. Additionally, if the bind user belongs to a different search base, you must use the full DN.</p>
    <p class="note warning"><strong>Caution:</strong> <%= vars.company_name %> recommends against reusing LDAP service accounts across environments. LDAP service accounts cannot be subject to manual lockouts, such as lockouts that result from users utilizing the same account. Also, LDAP service accounts cannot be subject to automated deletions, since disruption to these service accounts might prevent user logins.</p>

1. For **User search base**, enter the location in the LDAP directory tree from which any LDAP user search begins. The typical LDAP search base matches your domain name.
<br>
<br>
For example, a domain named "cloud.example.com" typically uses the following LDAP user search base: `ou=Users,dc=example,dc=com`

1. For **User search filter**, enter a string that defines LDAP user search criteria. This search criteria allows LDAP to use more effective and efficient searches. For example, the standard LDAP search filter `cn=Smith` returns all objects with a common name equal to `Smith`.
<br>
<br>
In the LDAP search filter string that you use to configure <%= vars.app_runtime_abbr %>, use `{0}` instead of the username. For example, use `cn={0}` to return all LDAP objects with the same common name as the username.
<br>
<br>
In addition to `cn`, other attributes commonly searched for and returned are `mail`, `uid` and, in the case of Active Directory, `sAMAccountName`.
    <p class="note"><strong>Note:</strong> For instructions for testing and troubleshooting your LDAP search filters, see <a href="https://community.pivotal.io/s/article/Configuring-LDAP-Integration-with-Pivotal-Cloud-Foundry">Configuring LDAP Integration with Pivotal Cloud Foundry</a> in the Knowledge Base.</p>

1. For **Group search base**, enter the location in the LDAP directory tree from which the LDAP group search begins.
<br>
<br>
For example, a domain named "cloud.example.com" typically uses the following LDAP group search base: `ou=Groups,dc=example,dc=com`
<br>
<br>
This is required if you are mapping LDAP groups to an admin role. To map the groups under this search base to admin roles in <%= vars.app_runtime_abbr %>, see [Grant Admin Permissions to an External Group (SAML or LDAP)](../uaa/uaa-user-management.html#external-group) in _Creating and Managing Users with the UAA CLI (UAAC)_.
    <p class="note"><strong>Note:</strong> To onboard individual LDAP users and map them to <%= vars.app_runtime_abbr %> roles, see <a href="../operating/external-user-management.html">Adding Existing SAML or LDAP Users to a <%= vars.platform_name %> Deployment</a>.</p>

1. For **Group search filter**, enter a string that defines LDAP group search criteria. The standard value is `member={0}`. This string is required if you are mapping LDAP groups to an admin role.

1. For **Maximum group search depth**, enter a value between `1` and `10` that sets the maximum LDAP group search depth. The default value is `1`, and turns off nested group search.

1. For **Server SSL certificate**, copy and paste in the root certificate from your CA certificate or your self-signed certificate. This is required only for `ldaps://` URLs.

1. For **First name attribute** and **Last name attribute**, enter the attribute names in your LDAP directory that correspond to the first and last names in each user record. For example, `cn` and `sn`.

1. For **Email attribute**, enter the attribute name in your LDAP directory that corresponds to the email address in each user record. For example, `mail`.

1. For **Email domains**, enter a comma-separated list of the email domains for external users who are to receive invitations to Apps Manager.

1. For **LDAP referrals**, select how UAA handles LDAP server referrals out to other external user stores. UAA can:
    * **Automatically follow any referrals**.
    * **Ignore referrals and return partial result**.
    * **Throw exception for each referral and abort**.

1. Click **Save** and return to the <%= vars.ops_manager %> Installation Dashboard.

2. Click **Review Pending Changes**.

3. Click **Apply Changes**.

## <a id="configure-oidc"></a> Configure <%= vars.app_runtime_abbr %> to Use an OIDC Identity Provider

To integrate the UAA with an external OIDC identity provider (IDP):

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard.

1. Click the <%= vars.app_runtime_abbr %> tile.

1. Select **Authentication and Enterprise SSO**.

1. Select **OIDC identity provider**.

1. Set the **Provider name**. This is a unique name you create for the IDP. This name can include only alphanumeric characters, `+`, `_`, and `-`. You must not change this name after deployment because all external users use this name to link to the provider.

1. Enter a **Display name**. Your provider display name appears as a link on your <%= vars.platform_name %> login page.

1. For **Discovery URL**, enter the OIDC discovery URL of the external OIDC provider. This URL usually has this format: `https://<example-oidc-provider>.com/.well-known/openid-configuration`. And it serves as a JSON that contains the OIDC provider specifications. For example, its `issuer`, `authorization_endpoint`, and `token_endpoint` values.

1. For **Client ID**, enter the ID of the client registered with the external OIDC provider for use by the UAA. This external OIDC client must be configured according to the following general requirements. If applicable, note that different OIDC providers might use slightly different terminologies for these configuration options):
   * **Client**: Per security best practices, register a dedicated client for use by <%= vars.app_runtime_abbr %>. Some providers might refer to a "client" as an "application". Save the client secret for the next step.
   * **Grant type**:  Make sure that the client is allowed to perform the `Authorization Code` OAuth flow.
   * **Sign-in redirect URIs**:  Include a URL in this format: `https://login.<SYSTEM-DOMAIN>/login/callback/<PROVIDER-NAME>` where:
      * `SYSTEM-DOMAIN` is the domain for system level components. You can find this value under the **Domains** section of the <%= vars.app_runtime_abbr %> tile).
      * `PROVIDER-NAME` is the unique name you create for the IDP in the UAA. This can match the **Provider name** value that you previously entered.
   * **Users**: Make sure that the users to whom you want to grant access to <%= vars.app_runtime_abbr %> are allowed access to this client or application.
   * **Groups**:  Make sure that this client is allowed to obtain all relevant OIDC user groups information that you need to perform mappings from external OIDC user groups to internal <%= vars.app_runtime_abbr %> scopes. For example, if you wish to grant <%= vars.app_runtime_abbr %> admin scopes to all external OIDC users belonging to the `example-inc-operators` group, you must make sure that this client is allowed to access this group memberships.

   <p class="note"><strong>Note:</strong> For more information about how to perform external group mappings, see [Grant Admin Permissions to an External Group (SAML, LDAP, or OIDC)](../uaa/uaa-user-management.html#external-group). </p>

1. For **Client secret**, enter the client secret of the client whose ID is entered in the previous step.

1. For **Scopes**, enter a comma-separated list of scopes to request from the external OIDC provider. Per OIDC 1.0 specifications, requesting certain scopes from an OIDC provider can result in receiving additional claims. For example, requesting `openid, profile, email` scopes (the current default value for this input field) can allow the UAA to obtain claims containing the user's first name, last name, and email. Additionally, please include the scope or scopes, for example, `groups`) that allows the UAA to obtain the user's group memberships. Consult your OIDC provider's documentation to decide the exact scopes to request in order to obtain sufficient claims.

1. For **Email domains**, enter a comma-separated list of the email domains for external users who are to receive invitations to Apps Manager.

1. For **Username Claim**, enter the external OIDC provider's claim that is mapped to the TAS username.

1. For **First Name Claim**, enter the external OIDC provider's claim that is mapped to the user's first name in TAS.

1. For **Last Name Claim**, enter the external OIDC provider's claim that is mapped to the user's last name in TAS.

1. For **Email Claim**, enter the external OIDC provider's claim that is mapped to the user's email in TAS.

1. For **External Groups Claim(s)**, enter a comma-separated list of external OIDC provider's claim(s) containing groups information, which can be used to map to internal <%= vars.app_runtime_abbr %> scopes.

1. Click **Save** and return to the <%= vars.ops_manager %> Installation Dashboard.

2. Click **Review Pending Changes**.

3. Click **Apply Changes**.

<p class="note warning"><strong>Known issue:</strong> As of VMware Tanzu Application Service 4.0.0, when an external OIDC provider login is configured, and when you successfully log out from the UAA UI or other <%= vars.app_runtime_abbr %> UIs, the UAA attempts to log the users out of the OIDC provider as well. This external OIDC provider logout operation might fail due to a known issue, that results in producing an error page from the provider. If you do not want to log out of the external OIDC provider, this error can be ignored. If you do wish to log out of the external OIDC provider, navigate to the provider login page directly and log out from there. This issue is addressed in a future release.</p>